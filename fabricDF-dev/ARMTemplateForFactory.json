{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "fabricDF-dev"
		},
		"ls_blobfabricstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blobfabricstorage'"
		},
		"ls_demo_fabric_sqlserver_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_demo_fabric_sqlserver'"
		},
		"ls_demo_fabric_sqlserver_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "demo-fabric-sqlserver.database.windows.net"
		},
		"ls_demo_fabric_sqlserver_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "fabric_database"
		},
		"ls_demo_fabric_sqlserver_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "azureadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/1 Copy activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Table to CSV file movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_demofabricsqlserver_fabricdatabase_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-07T22:04:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_demofabricsqlserver_fabricdatabase_customer')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10 ForEach Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('InputArray')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Result",
										"value": {
											"value": "@mul(item(),2)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"InputArray": {
						"type": "Array",
						"defaultValue": [
							5,
							10,
							15,
							20
						]
					},
					"Result": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-10T23:39:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/11 Migration list of files from one container to another')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get List of File Names",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get List of File Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get List of File Names').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy files data from source",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_source_migration",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_migration_destination",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-11T23:29:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_source_migration')]",
				"[concat(variables('factoryId'), '/datasets/ds_migration_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12 Until Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('Value'),5)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Result",
										"value": {
											"value": "@mul(variables('Value'),variables('Number'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Temp",
										"value": {
											"value": "@variables('Value')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Value",
										"value": {
											"value": "@add(variables('Temp'), 1)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Number": {
						"type": "Integer",
						"defaultValue": 5
					},
					"Value": {
						"type": "Integer",
						"defaultValue": 1
					},
					"Result": {
						"type": "Integer"
					},
					"Temp": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/13 Dynamic path current date')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilePath",
							"value": {
								"value": "@concat(substring(utcNow(),0,4),'/',substring(utcNow(),5,2), '/',substring(utcNow(),8,2))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FilePath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/14 Migrate List of tables into CSV - Sol1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('TableList')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_migrate_sqlserver_tables_source",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().Schema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_rawlayer_sink",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TableList": {
						"type": "Array",
						"defaultValue": [
							{
								"Schema": "saleslt",
								"TableName": "customer"
							},
							{
								"Schema": "saleslt",
								"TableName": "product"
							},
							{
								"Schema": "saleslt",
								"TableName": "address"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_migrate_sqlserver_tables_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_rawlayer_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 Variable and Set Variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Length",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Length",
							"value": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Length": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-08T07:44:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Area Calculation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Length",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Length",
							"value": 10
						}
					},
					{
						"name": "Set Breadth",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Breadth",
							"value": 5
						}
					},
					{
						"name": "Area Calculation",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Area",
							"value": {
								"value": "@mul(variables('Length'),variables('Breadth'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Length": {
						"type": "Integer"
					},
					"Breadth": {
						"type": "Integer"
					},
					"Area": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-08T08:11:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/4 Append Variable activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Marks",
							"value": {
								"value": "@int('90')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Append variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@variables('Marks')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Marks": {
						"type": "Array",
						"defaultValue": [
							89,
							50,
							78,
							40
						]
					},
					"Temp": {
						"type": "Array",
						"defaultValue": []
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T07:25:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/5 Get Metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blob_sink",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"columnCount",
								"structure",
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blob_sink_container",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T07:39:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_sink')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_sink_container')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/6 Lookup Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_blob_sink",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TempPhone",
							"value": {
								"value": "@activity('Lookup1').output.value[2].phone",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TempPhone": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T21:10:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/7 Script Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_demo_fabric_sqlserver",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select * from [SalesLT].[SalesOrderHeader]\n\nSelect * from [SalesLT].[ProductModel]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T23:43:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_demo_fabric_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/8 1 Pipeline with Parameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_blob_sourcefiles_container",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-10T05:28:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_sourcefiles_container')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/8 Pipeline wo Parameters Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_blob_sourcefiles_container",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "patients.csv"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-10T05:28:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_sourcefiles_container')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/9 Execute Pipeline Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL wo Parameters",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "8 Pipeline wo Parameters Activity",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL with Parameters",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "8 1 Pipeline with Parameter",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"FileName": "patients.csv"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-10T06:13:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/8 Pipeline wo Parameters Activity')]",
				"[concat(variables('factoryId'), '/pipelines/8 1 Pipeline with Parameter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobfabricstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sourcefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "START",
						"type": "String"
					},
					{
						"name": "STOP",
						"type": "String"
					},
					{
						"name": "PATIENT",
						"type": "String"
					},
					{
						"name": "ORGANIZATION",
						"type": "String"
					},
					{
						"name": "PAYER",
						"type": "String"
					},
					{
						"name": "ENCOUNTERCLASS",
						"type": "String"
					},
					{
						"name": "CODE",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "BASE_ENCOUNTER_COST",
						"type": "String"
					},
					{
						"name": "TOTAL_CLAIM_COST",
						"type": "String"
					},
					{
						"name": "PAYER_COVERAGE",
						"type": "String"
					},
					{
						"name": "REASONCODE",
						"type": "String"
					},
					{
						"name": "REASONDESCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobfabricstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobfabricstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customer.csv",
						"container": "sink"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobfabricstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_sink_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobfabricstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sink"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "PasswordHash",
						"type": "String"
					},
					{
						"name": "PasswordSalt",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobfabricstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_sourcefiles_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobfabricstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "sourcefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "START",
						"type": "String"
					},
					{
						"name": "STOP",
						"type": "String"
					},
					{
						"name": "PATIENT",
						"type": "String"
					},
					{
						"name": "ORGANIZATION",
						"type": "String"
					},
					{
						"name": "PAYER",
						"type": "String"
					},
					{
						"name": "ENCOUNTERCLASS",
						"type": "String"
					},
					{
						"name": "CODE",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "BASE_ENCOUNTER_COST",
						"type": "String"
					},
					{
						"name": "TOTAL_CLAIM_COST",
						"type": "String"
					},
					{
						"name": "PAYER_COVERAGE",
						"type": "String"
					},
					{
						"name": "REASONCODE",
						"type": "String"
					},
					{
						"name": "REASONDESCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobfabricstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_sourcefiles_sales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobfabricstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales Data.xlsx",
						"container": "sourcefiles"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobfabricstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_demofabricsqlserver_fabricdatabase_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_demo_fabric_sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_demo_fabric_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_migrate_sqlserver_tables_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_demo_fabric_sqlserver",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_demo_fabric_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_migration_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobfabricstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "START",
						"type": "String"
					},
					{
						"name": "STOP",
						"type": "String"
					},
					{
						"name": "PATIENT",
						"type": "String"
					},
					{
						"name": "ORGANIZATION",
						"type": "String"
					},
					{
						"name": "PAYER",
						"type": "String"
					},
					{
						"name": "ENCOUNTERCLASS",
						"type": "String"
					},
					{
						"name": "CODE",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "BASE_ENCOUNTER_COST",
						"type": "String"
					},
					{
						"name": "TOTAL_CLAIM_COST",
						"type": "String"
					},
					{
						"name": "PAYER_COVERAGE",
						"type": "String"
					},
					{
						"name": "REASONCODE",
						"type": "String"
					},
					{
						"name": "REASONDESCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobfabricstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rawlayer_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobfabricstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().FileName, '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(substring(utcNow(),0,4),'/',substring(utcNow(),5,2), '/',substring(utcNow(),8,2), '/', dataset().FileName)",
							"type": "Expression"
						},
						"container": "rawlayer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobfabricstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_migration')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobfabricstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "sourcefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "START",
						"type": "String"
					},
					{
						"name": "STOP",
						"type": "String"
					},
					{
						"name": "PATIENT",
						"type": "String"
					},
					{
						"name": "ORGANIZATION",
						"type": "String"
					},
					{
						"name": "PAYER",
						"type": "String"
					},
					{
						"name": "ENCOUNTERCLASS",
						"type": "String"
					},
					{
						"name": "CODE",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "BASE_ENCOUNTER_COST",
						"type": "String"
					},
					{
						"name": "TOTAL_CLAIM_COST",
						"type": "String"
					},
					{
						"name": "PAYER_COVERAGE",
						"type": "String"
					},
					{
						"name": "REASONCODE",
						"type": "String"
					},
					{
						"name": "REASONDESCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobfabricstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blobfabricstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blobfabricstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_demo_fabric_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_demo_fabric_sqlserver_properties_typeProperties_server')]",
					"database": "[parameters('ls_demo_fabric_sqlserver_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_demo_fabric_sqlserver_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_demo_fabric_sqlserver_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}